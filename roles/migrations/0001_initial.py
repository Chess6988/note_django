# Generated by Django 5.0.3 on 2025-08-23 08:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import roles.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Annee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.CharField(max_length=9, unique=True)),
            ],
            options={
                'db_table': 'annees',
            },
        ),
        migrations.CreateModel(
            name='Filiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_filiere', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'filieres',
            },
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_niveau', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'niveaux',
            },
        ),
        migrations.CreateModel(
            name='Semestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_semestre', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'semestres',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('etudiant', 'Etudiant'), ('enseignant', 'Enseignant'), ('admin', 'Admin'), ('superadmin', 'Superadmin')], max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admins',
            },
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='enseignant_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'enseignants',
            },
        ),
        migrations.CreateModel(
            name='EnseignantAnnee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.ForeignKey(blank=True, db_column='id_annee', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.annee')),
                ('enseignant', models.ForeignKey(db_column='id_enseignant', on_delete=django.db.models.deletion.CASCADE, to='roles.enseignant')),
            ],
            options={
                'db_table': 'enseignants_annees',
            },
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='etudiant_profile', to=settings.AUTH_USER_MODEL)),
                ('filiere', models.ForeignKey(blank=True, db_column='id_filiere', null=True, on_delete=django.db.models.deletion.SET_NULL, to='roles.filiere')),
                ('niveau', models.ForeignKey(blank=True, db_column='id_niveau', null=True, on_delete=django.db.models.deletion.SET_NULL, to='roles.niveau')),
            ],
            options={
                'db_table': 'etudiants',
            },
        ),
        migrations.CreateModel(
            name='EtudiantAnnee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.ForeignKey(db_column='id_annee', default=roles.models.get_default_annee, on_delete=django.db.models.deletion.CASCADE, to='roles.annee')),
                ('etudiant', models.ForeignKey(db_column='id_etudiant', on_delete=django.db.models.deletion.CASCADE, to='roles.etudiant')),
            ],
            options={
                'db_table': 'etudiants_annees',
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('etudiant', 'Etudiant'), ('enseignant', 'Enseignant'), ('admin', 'Admin'), ('superadmin', 'Superadmin')], max_length=20)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('pin', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254)),
                ('attempt_count', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('expired', 'Expired'), ('invalidated', 'Invalidated')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('accepted_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invitation', to=settings.AUTH_USER_MODEL)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_matiere', models.CharField(max_length=100)),
                ('course_code', models.CharField(max_length=52, unique=True)),
                ('filiere', models.ForeignKey(db_column='id_filiere', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.filiere')),
                ('niveau', models.ForeignKey(db_column='id_niveau', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.niveau')),
                ('semestre', models.ForeignKey(db_column='id_semestre', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.semestre')),
            ],
            options={
                'db_table': 'matieres',
            },
        ),
        migrations.CreateModel(
            name='MatiereCommune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_matiere_commune', models.CharField(max_length=100)),
                ('course_code', models.CharField(max_length=52, unique=True)),
                ('filiere', models.ForeignKey(db_column='id_filiere', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.filiere')),
                ('niveau', models.ForeignKey(db_column='id_niveau', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.niveau')),
                ('semestre', models.ForeignKey(db_column='id_semestre', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.semestre')),
            ],
            options={
                'db_table': 'matieres_communes',
            },
        ),
        migrations.CreateModel(
            name='MatiereCommuneEtudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.ForeignKey(blank=True, db_column='id_annee', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.annee')),
                ('etudiant', models.ForeignKey(db_column='id_etudiant', on_delete=django.db.models.deletion.CASCADE, to='roles.etudiant')),
                ('matiere_commune', models.ForeignKey(db_column='id_matiere_commune', on_delete=django.db.models.deletion.CASCADE, to='roles.matierecommune')),
            ],
            options={
                'db_table': 'matieres_communes_etudiants',
            },
        ),
        migrations.CreateModel(
            name='MatiereEtudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.ForeignKey(blank=True, db_column='id_annee', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.annee')),
                ('etudiant', models.ForeignKey(db_column='id_etudiant', on_delete=django.db.models.deletion.CASCADE, to='roles.etudiant')),
                ('matiere', models.ForeignKey(db_column='id_matiere', on_delete=django.db.models.deletion.CASCADE, to='roles.matiere')),
            ],
            options={
                'db_table': 'matieres_etudiants',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cc_note', models.FloatField()),
                ('normal_note', models.FloatField()),
                ('note_final', models.FloatField()),
                ('annee', models.ForeignKey(blank=True, db_column='id_annee', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.annee')),
                ('etudiant', models.ForeignKey(db_column='id_etudiant', on_delete=django.db.models.deletion.CASCADE, to='roles.etudiant')),
                ('matiere', models.ForeignKey(blank=True, db_column='id_matiere', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.matiere')),
                ('matiere_commune', models.ForeignKey(blank=True, db_column='id_matiere_commune', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.matierecommune')),
            ],
            options={
                'db_table': 'notes',
            },
        ),
        migrations.CreateModel(
            name='ProfileEnseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('new_entry', models.BooleanField(default=True)),
                ('annee', models.ForeignKey(blank=True, db_column='id_annee', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.annee')),
                ('enseignant', models.ForeignKey(db_column='id_enseignant', on_delete=django.db.models.deletion.CASCADE, to='roles.enseignant')),
                ('matiere', models.ForeignKey(blank=True, db_column='id_matiere', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.matiere')),
                ('matiere_commune', models.ForeignKey(blank=True, db_column='id_matiere_commune', null=True, on_delete=django.db.models.deletion.CASCADE, to='roles.matierecommune')),
            ],
            options={
                'db_table': 'profile_enseignant',
            },
        ),
        migrations.CreateModel(
            name='ProfileEtudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.ForeignKey(db_column='id_annee', default=roles.models.get_default_annee, on_delete=django.db.models.deletion.CASCADE, to='roles.annee')),
                ('etudiant', models.ForeignKey(db_column='id_etudiant', on_delete=django.db.models.deletion.CASCADE, to='roles.etudiant')),
                ('filiere', models.ForeignKey(db_column='id_filiere', on_delete=django.db.models.deletion.CASCADE, to='roles.filiere')),
                ('niveau', models.ForeignKey(db_column='id_niveau', on_delete=django.db.models.deletion.CASCADE, to='roles.niveau')),
                ('semestre', models.ForeignKey(db_column='id_semestre', on_delete=django.db.models.deletion.CASCADE, to='roles.semestre')),
            ],
            options={
                'db_table': 'profile_etudiant',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='roles_user_email_3691cb_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='roles_user_role_156caf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='enseignantannee',
            unique_together={('enseignant', 'annee')},
        ),
        migrations.AlterUniqueTogether(
            name='etudiantannee',
            unique_together={('etudiant', 'annee')},
        ),
        migrations.AddIndex(
            model_name='invitation',
            index=models.Index(fields=['token'], name='roles_invit_token_d7bd3d_idx'),
        ),
        migrations.AddIndex(
            model_name='invitation',
            index=models.Index(fields=['status'], name='roles_invit_status_9b4786_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='matierecommuneetudiant',
            unique_together={('etudiant', 'matiere_commune', 'annee')},
        ),
        migrations.AlterUniqueTogether(
            name='matiereetudiant',
            unique_together={('etudiant', 'matiere', 'annee')},
        ),
        migrations.AddConstraint(
            model_name='note',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('matiere__isnull', False), ('matiere_commune__isnull', True)), models.Q(('matiere__isnull', True), ('matiere_commune__isnull', False)), _connector='OR'), name='check_matiere_or_matiere_commune'),
        ),
        migrations.AddConstraint(
            model_name='note',
            constraint=models.UniqueConstraint(fields=('etudiant', 'matiere', 'annee'), name='unique_etudiant_matiere_annee'),
        ),
        migrations.AddConstraint(
            model_name='note',
            constraint=models.UniqueConstraint(fields=('etudiant', 'matiere_commune', 'annee'), name='unique_etudiant_matiere_commune_annee'),
        ),
        migrations.AlterUniqueTogether(
            name='profileetudiant',
            unique_together={('etudiant', 'annee')},
        ),
        migrations.AddIndex(
            model_name='matierecommune',
            index=models.Index(fields=['filiere', 'semestre', 'niveau'], name='matieres_co_id_fili_dbd2c3_idx'),
        ),
        migrations.AddIndex(
            model_name='matiere',
            index=models.Index(fields=['filiere', 'semestre', 'niveau'], name='matieres_id_fili_8bb096_idx'),
        ),
    ]
